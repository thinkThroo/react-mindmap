{"version":3,"file":"main.es.js","sources":["../../../packages/plugin-json-serializer/src/json-serializer-plugin.ts"],"sourcesContent":["import {\n  Block,\n  Config,\n  createKey,\n  DocModel,\n  ExtData,\n  FocusMode,\n  IControllerRunContext,\n  SheetModel,\n  Topic\n} from '@blink-mind/core';\nimport debug from 'debug';\nimport { isImmutable, List, Map } from 'immutable';\n\nconst log = debug('plugin:json-serializer');\n\nexport function JsonSerializerPlugin() {\n  return {\n    migrateDocModel(ctx, next) {\n      const { controller, obj, formatVersion } = ctx;\n      switch (formatVersion) {\n        case '0.0':\n          return controller.run('migrateDocModel', {\n            ...ctx,\n            obj: {\n              sheetModels: [obj],\n              currentSheetIndex: 0,\n              formatVersion: '0.1'\n            },\n            formatVersion: '0.1'\n          });\n        case '0.1':\n          return obj;\n      }\n    },\n\n    serializeDocModel(ctx: IControllerRunContext, next) {\n      const { docModel, controller } = ctx;\n      return {\n        sheetModels: docModel.sheetModels\n          .toArray()\n          .map(model =>\n            controller.run('serializeSheetModel', { ...ctx, model })\n          ),\n        extData: controller.run('serializeExtData', {\n          ...ctx,\n          extData: docModel.extData\n        }),\n        currentSheetIndex: docModel.currentSheetIndex,\n        formatVersion: docModel.formatVersion\n      };\n    },\n\n    deserializeDocModel(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      let { obj } = ctx;\n      const { controller } = ctx;\n      let formatVersion = obj.formatVersion || '0.0';\n\n      obj = controller.run('migrateDocModel', { ...ctx, obj, formatVersion });\n\n      formatVersion = obj.formatVersion;\n\n      const sheetModels = obj.sheetModels.map(sheetModel =>\n        controller.run('deserializeSheetModel', {\n          ...ctx,\n          sheetModel,\n          formatVersion\n        })\n      );\n\n      return new DocModel({\n        sheetModels: List(sheetModels),\n        currentSheetIndex: obj.currentSheetIndex,\n        extData: controller.run('deserializeExtData', {\n          ...ctx,\n          extData: obj.extData,\n          formatVersion\n        }),\n        formatVersion\n      });\n    },\n\n    serializeExtData(ctx: IControllerRunContext & { extData: ExtData }, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { extData, controller } = ctx;\n      const res = {};\n      extData.forEach((v, k) => {\n        res[k] = controller.run('serializeExtDataItem', {\n          ctx,\n          extDataKey: k,\n          extDataItem: v\n        });\n      });\n      return res;\n    },\n\n    deserializeExtData(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { extData, controller } = ctx;\n      let res = Map();\n      for (const extDataKey in extData) {\n        res = res.set(\n          extDataKey,\n          controller.run('deserializeExtDataItem', {\n            ...ctx,\n            extDataKey,\n            extDataItem: extData[extDataKey]\n          })\n        );\n      }\n      return res;\n    },\n\n    serializeExtDataItem(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { extDataItem } = ctx;\n      if (isImmutable(extDataItem)) {\n        return extDataItem.toJS();\n      }\n      return extDataItem;\n    },\n\n    deserializeExtDataItem(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { extDataItem } = ctx;\n      return extDataItem;\n    },\n\n    serializeSheetModel(ctx: IControllerRunContext, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { model, controller } = ctx;\n      const obj = {\n        title: model.title,\n        rootTopicKey: model.rootTopicKey,\n        editorRootTopicKey: model.editorRootTopicKey,\n        focusKey: model.focusKey,\n        topics: model.topics\n          .valueSeq()\n          .toArray()\n          .map(topic => controller.run('serializeTopic', { ...ctx, topic })),\n        config: controller.run('serializeConfig', {\n          ...ctx,\n          config: model.config\n        })\n      };\n      return obj;\n    },\n\n    deserializeSheetModel(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { sheetModel, controller, formatVersion } = ctx;\n      const {\n        id,\n        title,\n        rootTopicKey,\n        editorRootTopicKey,\n        focusKey,\n        topics,\n        config\n      } = sheetModel;\n      let res = new SheetModel();\n      res = res.merge({\n        id: id || createKey(),\n        title,\n        rootTopicKey,\n        editorRootTopicKey:\n          editorRootTopicKey == null ? rootTopicKey : editorRootTopicKey,\n        focusKey,\n        config: controller.run('deserializeConfig', {\n          ...ctx,\n          config,\n          formatVersion\n        }),\n        topics: controller.run('deserializeTopics', {\n          ...ctx,\n          topics,\n          formatVersion\n        }),\n        formatVersion: sheetModel.formatVersion\n      });\n      if (res.focusKey == null) {\n        res = res.set('focusKey', res.rootTopicKey);\n      }\n      if (res.focusMode == null) {\n        res = res.set('focusMode', FocusMode.NORMAL);\n      }\n      log('deserializeModel', res);\n      return res;\n    },\n\n    serializeConfig(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { config } = ctx;\n      return config.toJS();\n    },\n\n    deserializeConfig(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { config } = ctx;\n      return new Config(config);\n    },\n\n    serializeTopic(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { topic, controller } = ctx;\n      return {\n        key: topic.key,\n        parentKey: topic.parentKey,\n        subKeys: topic.subKeys.toArray(),\n        collapse: topic.collapse,\n        style: topic.style,\n        blocks: controller.run('serializeBlocks', ctx)\n      };\n    },\n\n    serializeBlocks(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { topic, controller } = ctx;\n      if (topic == null) {\n        debugger;\n      }\n      return topic.blocks.map(block =>\n        controller.run('serializeBlock', { ...ctx, block })\n      );\n    },\n\n    deserializeTopic(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { topic, controller } = ctx;\n      const { key, parentKey, subKeys, blocks, style, collapse } = topic;\n      let res = new Topic();\n      res = res.merge({\n        key,\n        parentKey,\n        subKeys: List(subKeys),\n        style,\n        collapse,\n        blocks: controller.run('deserializeBlocks', { ...ctx, blocks })\n      });\n      return res;\n    },\n\n    deserializeTopics(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { topics, controller } = ctx;\n      let res = Map();\n      res = res.withMutations(r => {\n        topics.forEach(topic =>\n          r.set(\n            topic.key,\n            controller.run('deserializeTopic', { ...ctx, topic })\n          )\n        );\n      });\n      return res;\n    },\n\n    serializeBlock(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { block, controller } = ctx;\n      const res = {\n        type: block.type,\n        data: controller.run('serializeBlockData', { ...ctx })\n      };\n      return res;\n    },\n\n    serializeBlockData(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { block } = ctx;\n      return block.data;\n    },\n\n    deserializeBlock(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { block, controller } = ctx;\n      const { type } = block;\n\n      return new Block({\n        type,\n        data: controller.run('deserializeBlockData', { ...ctx, block })\n      });\n    },\n\n    deserializeBlockData(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { block } = ctx;\n      return block.data;\n    },\n\n    deserializeBlocks(ctx, next) {\n      const nextRes = next();\n      if (nextRes != null) return nextRes;\n      const { blocks, controller } = ctx;\n      let res = List();\n      res = res.withMutations(res => {\n        blocks.forEach(block =>\n          res.push(controller.run('deserializeBlock', { ...ctx, block }))\n        );\n      });\n      return res;\n    }\n  };\n}\n"],"names":[],"mappings":"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"}